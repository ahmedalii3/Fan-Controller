/*
 * lcd.c
 *
 *  Created on: Jun 14, 2024
 *      Author: DELL
 */

#include"lcd.h"
#include"gpio.h"
#include<util/delay.h>

void LCD_init(void){
	GPIO_setupPinDirection(RS_port,RS_pin, PIN_OUTPUT);
	GPIO_setupPinDirection(E_port ,E_pin , PIN_OUTPUT);
	GPIO_setupPinDirection(RW_port,RW_pin, PIN_OUTPUT);
	_delay_ms(20);

	GPIO_setupPortDirection(PORTC_ID,PIN_OUTPUT);
	LCD_sendCommand(LCD_TWO_LINES_EIGHT_BITS_MODE);

	LCD_sendCommand(LCD_CLEAR_COMMAND);
	LCD_sendCommand(LCD_CURSOR_ON);

}

void LCD_sendCommand(uint8 command){
	GPIO_writePin(E_port,E_pin,1);
	_delay_ms(1);
	GPIO_writePin(RS_port,RS_pin,0);
	_delay_ms(1);
	GPIO_writePort(Data_portId,command);
	_delay_ms(1);
	GPIO_writePin(E_port,E_pin,0);
}

void LCD_displayChar(uint8 byte){
	GPIO_writePin(E_port,E_pin,1);
	_delay_ms(1);
	GPIO_writePin(RS_port,RS_pin,1);
	_delay_ms(1);
	GPIO_writePort(Data_portId,byte);
	_delay_ms(1);
	GPIO_writePin(E_port,E_pin,0);
}

void LCD_displayString(const char* str){
	uint32 i = 0;
	while(*(str+i) != "\0"){
		LCD_displayChar(*(str+i));
		i++;
	}
}

void LCD_moveCursor(uint8 row, uint8 col){
	uint8 lcd_memory_address;

		/* Calculate the required address in the LCD DDRAM */
		switch(row)
		{
			case 0:
				lcd_memory_address=col;
					break;
			case 1:
				lcd_memory_address=col+0x40;
					break;
			case 2:
				lcd_memory_address=col+0x10;
					break;
			case 3:
				lcd_memory_address=col+0x50;
					break;
		}
		/* Move the LCD cursor to this specific address */
		LCD_sendCommand(lcd_memory_address | LCD_SET_CURSOR_LOCATION);
}

void LCD_displayStringRowColumn(uint8 row, uint8 col, const char* str){
	LCD_moveCursor(row,col); /* go to to the required LCD position */
	LCD_displayString(str); /* display the string */
}
void LCD_clearScreen(void){
	LCD_sendCommand(LCD_CLEAR_COMMAND);
}

void LCD_intToString(int data){

	   char buff[16]; /* String to hold the ascii result */
	   itoa(data,buff,10); /* Use itoa C function to convert the data to its corresponding ASCII value, 10 for decimal */
	   LCD_displayString(buff); /* Display the string */
}


